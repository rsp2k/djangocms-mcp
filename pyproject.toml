[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-cms-mcp"
version = "1.0.0"
description = "Django CMS v4 plugin providing Model Context Protocol (MCP) server functionality for LLM assistant integration"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Ryan Malloy", email = "ryan@supporte.systems"},
]
keywords = [
    "django",
    "django-cms",
    "django-cms-v4",
    "mcp",
    "model-context-protocol",
    "ai",
    "claude",
    "cms",
    "content-management",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "Django>=4.2,<6.0",
    "django-cms>=4.0.0,<5.0",
    "django-mcp-server>=0.1.0",
    "djangocms-admin-style>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "ruff>=0.0.250",
]
test = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "factory-boy>=3.2.0",
    "freezegun>=1.2.0",
    "django-filer>=3.0.0",
    "easy-thumbnails>=2.7.0",
    "djangocms-text-ckeditor>=5.0.0",
]
versioning = [
    "djangocms-versioning>=2.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.20.0",
]

[project.urls]
Homepage = "https://github.com/rsp2k/django-cms-mcp"
Documentation = "https://django-cms-mcp.readthedocs.io/"
Repository = "https://github.com/rsp2k/django-cms-mcp.git"
Issues = "https://github.com/rsp2k/django-cms-mcp/issues"
Changelog = "https://github.com/rsp2k/django-cms-mcp/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["djangocms_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "/djangocms_mcp",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
    "/tests",
    "/pytest.ini",
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_djangocms = "cms,menus,treebeard,djangocms_admin_style"
known_first_party = "djangocms_mcp"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "DJANGOCMS", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "cms.*",
    "menus.*",
    "treebeard.*",
    "django_mcp_server.*",
    "djangocms_versioning.*",
    "djangocms_admin_style.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["djangocms_mcp"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".env",
    "migrations",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"*/migrations/*" = ["E501"]

[tool.ruff.isort]
known-first-party = ["djangocms_mcp"]
known-third-party = ["django", "cms", "menus", "treebeard"]
